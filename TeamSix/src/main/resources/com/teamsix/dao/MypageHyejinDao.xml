<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teamsix.dao.MypageHyejinDao"> 
	<!-- 마이페이지 -->
	<select id="ticketCheck" parameterType="String" resultType="TicketCheckVO">
		select t.paysrn`paysrn`, m.title`title`, r.roomname`roomname`, ms.screeningdate`screeningdate`, ms.screeningtime`screeningtime` from MovieSchedule ms
		join Ticketing t using(schedulesrn) join Movie m using(moviesrn) join TheaterRoom r using(roomsrn)
		where t.userid=#{userid}
	</select>
	<select id="checkDetail" parameterType="java.util.HashMap" resultType="TicketCheckDetailVO">
		select tt.audience_type, count(*) as `numbers`, group_concat(a.seat separator ' / ') as`seat` from audience a
		join ticketing t using(paysrn) join ticket_type tt using(ticket_type) where t.userid =#{keyword1} and a.paysrn=#{keyword2}
		group by tt.audience_type order by tt.audience_type asc
	</select>
	<delete id="ticketDelete" parameterType="int">
		delete from Payment where paysrn=#{paysrn}
	</delete>
	<select id="myMovingList" parameterType="String" resultType="MyMovingTheaterVO">
		select any_value(theatername)`theatername`, count(theatername)`count` from ticketing t 
		join movieschedule ms using(schedulesrn) join theaterroom thr using(roomsrn) join theater th using(theatersrn)
		group by userid having userid=#{userid} order by count(theatername) desc;
	</select>
</mapper>
	
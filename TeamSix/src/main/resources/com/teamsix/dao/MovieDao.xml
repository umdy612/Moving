<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teamsix.dao.MovieDao">
	<select id="scheduleCheck" parameterType="int" resultType="int">
		SELECT count(*) FROM movieSchedule WHERE moviesrn=#{moviesrn}
	</select>
	<select id="movieSearch" parameterType="String" resultType="MovieVO">
		SELECT * FROM Movie WHERE title LIKE CONCAT('%', #{str}, '%') 
		OR director LIKE CONCAT('%', #{str}, '%') 
		OR genre LIKE CONCAT('%', #{str}, '%')
	</select>
	
	<select id="audienceCheck" resultType="int" parameterType="java.util.HashMap">
		SELECT count(*) FROM ticketing t
		JOIN MovieSchedule s 	ON t.userid = #{userid} and t.schedulesrn = s.schedulesrn 
		JOIN Movie m 			ON s.moviesrn = m.moviesrn and m.moviesrn=#{moviesrn}
	</select>
	
	<select id="movieChartResv" resultType="MovieVO">
		SELECT m.title, ROUND(AVG(r.star), 1) 'star'
		FROM Movie m
		LEFT JOIN MovieSchedule s ON m.moviesrn = s.moviesrn
		LEFT JOIN Ticketing t ON s.schedulesrn = t.schedulesrn
		LEFT JOIN reply r ON m.moviesrn = r.moviesrn
		GROUP BY m.moviesrn
		ORDER BY COUNT(t.userid) DESC;
	</select>
	<select id="movieChartStar" resultType="MovieVO">
		SELECT m.title, ROUND(AVG(r.star), 1)'star'
		FROM Movie m
		LEFT JOIN MovieSchedule s ON m.moviesrn = s.moviesrn
		LEFT JOIN Ticketing t ON s.schedulesrn = t.schedulesrn
		LEFT JOIN reply r ON m.moviesrn = r.moviesrn
		GROUP BY m.moviesrn
		ORDER BY star DESC;
	</select>
	<select id="moiveReply" parameterType="int" resultType="ReplyVO">
		select star, userid, replycontent FROM reply where moviesrn = #{moviesrn}
	</select>
	<insert id="replyInsert" parameterType="ReplyVO">
		INSERT INTO reply (userid, moviesrn, replycontent, star, replyip)
		VALUES(#{userid}, #{moviesrn}, #{replycontent}, #{star}, #{replyip})
	</insert>
	<update id="replyUpdate" parameterType="ReplyVO">
		UPDATE reply SET replycontent=#{replycontent}, star=#{star} where replysrn = #{replysrn}
	</update>
	<delete id="replyDelete" parameterType="int">
		DELETE FROM reply where replysrn = #{replysrn}
	</delete>
</mapper>
<!--   
	public int scheduleCheck(int no);				//상영 중인 영화 확인
	public List<Movie> movieSearch(String str);		//영화 검색
	public int audienceCheck();						//실관람객 확인
	public List<Movie> movieChartResv();			//영화차트 예매순
	public List<Movie> movieChartStar();			//영화차트 별점순
	public List<Reply> moiveReply(int no);			//영화 댓글
	public int replyInsert(Reply reply);			//댓글 등록
	public int replyUpdate(Reply reply);			//댓글 수정
	public int replyDelete(int no);					//댓글 삭제
-->